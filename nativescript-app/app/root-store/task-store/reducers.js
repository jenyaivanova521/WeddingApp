"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _ = require("lodash");
var actions_1 = require("./actions");
var state_1 = require("./state");
function reducer(state, action) {
    if (state === void 0) { state = state_1.initialState; }
    var task;
    var updatedTasks;
    var updatedUITaskDetails;
    switch (action.type) {
        case actions_1.TaskActionTypes.GET_TASKS_SUCCESS:
            return Object.assign({}, state, {
                tasks: action.payload.tasks
            });
        case actions_1.TaskActionTypes.ADD_TASK:
        case actions_1.TaskActionTypes.EDIT_TASK:
            return Object.assign({}, state, {
                ui: Object.assign({}, state.ui, {
                    taskForm: Object.assign({}, state.ui.taskForm, {
                        submitted: true,
                        modalOpen: true
                    })
                })
            });
        case actions_1.TaskActionTypes.ADD_TASK_CANCEL:
        case actions_1.TaskActionTypes.EDIT_TASK_CANCEL:
            return Object.assign({}, state, {
                ui: Object.assign({}, state.ui, {
                    taskForm: Object.assign({}, state.ui.taskForm, {
                        submitted: false,
                        modalOpen: false,
                        error: null
                    })
                })
            });
        case actions_1.TaskActionTypes.ADD_TASK_SUCCESS:
            return Object.assign({}, state, {
                tasks: [
                    action.payload.task
                ].concat(state.tasks),
                ui: Object.assign({}, state.ui, {
                    taskForm: Object.assign({}, state.ui.taskForm, {
                        submitted: false,
                        modalOpen: false
                    })
                })
            });
        case actions_1.TaskActionTypes.ADD_TASK_FAILURE:
        case actions_1.TaskActionTypes.EDIT_TASK_FAILURE:
            return Object.assign({}, state, {
                ui: Object.assign({}, state.ui, {
                    taskForm: Object.assign({}, state.ui.taskForm, {
                        submitted: false,
                        modalOpen: true,
                        error: action.payload.error
                    })
                })
            });
        case actions_1.TaskActionTypes.GET_TASK_DETAILS_SUCCESS:
            var updatedTaskDetails = Object.assign({}, state.taskDetails);
            task = action.payload.task;
            updatedTaskDetails[task.id] = task;
            return Object.assign({}, state, {
                taskDetails: updatedTaskDetails
            });
        case actions_1.TaskActionTypes.TOGGLE_TASK_DETAILS:
            updatedUITaskDetails = Object.assign({}, state.ui.taskDetails);
            var taskId = action.payload.taskId;
            if (updatedUITaskDetails[taskId]) {
                updatedUITaskDetails[taskId] = !updatedUITaskDetails[taskId];
            }
            else {
                updatedUITaskDetails[taskId] = true;
            }
            return Object.assign({}, state, {
                ui: Object.assign({}, state.ui, {
                    taskDetails: updatedUITaskDetails
                })
            });
        case actions_1.TaskActionTypes.DELETE_TASK_SUCCESS:
            updatedTasks = state.tasks.filter(function (task) {
                return task.id !== action.payload.taskId;
            });
            return Object.assign({}, state, {
                tasks: updatedTasks
            });
        case actions_1.TaskActionTypes.EDIT_TASK_SUCCESS:
            task = action.payload.task;
            updatedTasks = state.tasks.map(function (item, index) {
                if (item.id !== action.payload.task.id) {
                    return item;
                }
                return Object.assign({}, item, {
                    name: task.name,
                    dueDate: task.dueDate,
                    assignedMemberId: task.assignedMemberId,
                    ui: Object.assign({}, state.ui, {
                        taskForm: Object.assign({}, state.ui.taskForm, {
                            submitted: false,
                            modalOpen: false,
                            error: null
                        })
                    })
                });
            });
            // updatedUITaskDetails = Object.assign({}, state.ui.taskDetails);
            // updatedUITaskDetails[task.id] = false;
            return Object.assign({}, state, {
                tasks: updatedTasks,
                ui: Object.assign({}, state.ui, {
                    taskForm: Object.assign({}, state.ui.taskForm, {
                        submitted: false,
                        modalOpen: false
                    }),
                })
            });
        // taskDetails: updatedUITaskDetails
        case actions_1.TaskActionTypes.GET_TASK_STATS_SUCCESS:
            return Object.assign({}, state, {
                stats: action.payload.stats
            });
        case actions_1.TaskActionTypes.SET_TASK_STATUS_SUCCESS:
            updatedTasks = _.map(state.tasks, function (task) {
                if (task.id === action.payload.taskId) {
                    task.status = action.payload.status;
                }
                return task;
            });
            return Object.assign({}, state, {
                tasks: updatedTasks
            });
        default:
            return state;
    }
}
exports.reducer = reducer;
//# sourceMappingURL=data:application/json;base64,